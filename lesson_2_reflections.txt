O que acontece ao iniciar um repositório? Por que você precisa fazer isso?
R: Ao iniciar o repositorio é criada uma paste .git que fica oculta e armazena os commits. Você precisa fazer isso para salvar os commits!

Em que se difere a área de preparação do diretório de trabalho e do repositório? Qual valor você acha que ela oferece?
R: Ela serve para juntar arquivos em um mesmo commit?

Como você pode usar a área de preparação para garantir que tenha um commit por alteração lógica?
R: Usando os comandos Git diff e Git diff --staged para verificar as diferenças entre working area, staging area e o ultimo commit.

Quais são algumas das situações em que branches seriam úteis para manter seu histórico organizado? Como branches ajudariam?
R: Branches são linhas de trabalho paralelo, você pode usar branches na manutenção de um mesmo codigo para aparelhos com versões diferentes, por exemplo: Android Lollipop e Marshmallow. Também pode usar a 
feature para criar versões em outros idiomas ou criar uma linha de trabalho paralela pra fazer modificações experimentais.

Como os diagramas ajudam a visualizar a estrutura de branches?
R: Eles ajudam a ver em qual ponto do master(ou algum outro branch) foi criado o novo branch, ajudam a perceber o que a em comum entre 2 branchs diferentes.

Qual é o resultado da mesclagem de dois branches? Por que o representamos no diagrama dessa forma?
R: O resultado é a junção dos commits dos dois branches em apenas 1, é criado um novo commit com referencia(parente) para os commits dos 2 branches que foram merged.

Quais são os prós e contras da mesclagem automática do Git v. sempre fazer mesclagens manualmente?
R: A mesclagem do GIT é mais rápida mas não pode resolver conflitos automáticamente.